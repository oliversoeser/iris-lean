{"log":
 [{"message":
   ".> ELAN=elan ELAN_HOME=/Users/oliver/.elan ELAN_TOOLCHAIN=leanprover/lean4:v4.21.0 LAKE=/Users/oliver/.elan/toolchains/leanprover--lean4---v4.21.0/bin/lake LAKE_HOME=/Users/oliver/.elan/toolchains/leanprover--lean4---v4.21.0 LAKE_PKG_URL_MAP={} LEAN=/Users/oliver/.elan/toolchains/leanprover--lean4---v4.21.0/bin/lean LEAN_GITHASH=6741444a63eec253a7eae7a83f1beb3de015023d LEAN_SYSROOT=/Users/oliver/.elan/toolchains/leanprover--lean4---v4.21.0 LEAN_AR=/Users/oliver/.elan/toolchains/leanprover--lean4---v4.21.0/bin/llvm-ar LEAN_CC= LEAN_PATH=/Users/oliver/git/iris-lean/.lake/packages/Qq/.lake/build/lib/lean:/Users/oliver/git/iris-lean/.lake/packages/MD4Lean/.lake/build/lib/lean:/Users/oliver/git/iris-lean/.lake/packages/BibtexQuery/.lake/build/lib/lean:/Users/oliver/git/iris-lean/.lake/packages/UnicodeBasic/.lake/build/lib/lean:/Users/oliver/git/iris-lean/.lake/packages/Cli/.lake/build/lib/lean:/Users/oliver/git/iris-lean/.lake/build/lib/lean:/Users/oliver/git/iris-lean/.lake/packages/doc-gen4/.lake/build/lib/lean:/Users/oliver/git/iris-lean/docbuild/.lake/build/lib/lean:/Users/oliver/.elan/toolchains/leanprover--lean4---v4.21.0/lib/lean LEAN_SRC_PATH=/Users/oliver/git/iris-lean/.lake/packages/Qq:/Users/oliver/git/iris-lean/.lake/packages/MD4Lean:/Users/oliver/git/iris-lean/.lake/packages/MD4Lean:/Users/oliver/git/iris-lean/.lake/packages/BibtexQuery:/Users/oliver/git/iris-lean/.lake/packages/UnicodeBasic:/Users/oliver/git/iris-lean/.lake/packages/UnicodeBasic:/Users/oliver/git/iris-lean/.lake/packages/Cli:/Users/oliver/git/iris-lean/./src/:/Users/oliver/git/iris-lean/./src/:/Users/oliver/git/iris-lean/.lake/packages/doc-gen4:/Users/oliver/.elan/toolchains/leanprover--lean4---v4.21.0/src/lean/lake PATH DYLD_LIBRARY_PATH=/Users/oliver/.elan/toolchains/leanprover--lean4---v4.21.0/lib/lean:/Users/oliver/.elan/toolchains/leanprover--lean4---v4.21.0/lib:/Users/oliver/git/iris-lean/docbuild/.lake/build/lib:/Users/oliver/git/iris-lean/.lake/packages/doc-gen4/.lake/build/lib:/Users/oliver/git/iris-lean/.lake/build/lib:/Users/oliver/git/iris-lean/.lake/packages/Cli/.lake/build/lib:/Users/oliver/git/iris-lean/.lake/packages/UnicodeBasic/.lake/build/lib:/Users/oliver/git/iris-lean/.lake/packages/BibtexQuery/.lake/build/lib:/Users/oliver/git/iris-lean/.lake/packages/MD4Lean/.lake/build/lib:/Users/oliver/git/iris-lean/.lake/packages/Qq/.lake/build/lib /Users/oliver/git/iris-lean/.lake/packages/doc-gen4/.lake/build/bin/doc-gen4 genCore Lean --build /Users/oliver/git/iris-lean/docbuild/.lake/build --manifest /Users/oliver/git/iris-lean/docbuild/.lake/build/Lean-manifest.json",
   "level": "trace"},
  {"message":
   "stdout:\nWARNING: Failed to calculate equational lemmata for Lean.Meta.reduceNat?: (deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)\nWARNING: Failed to calculate equational lemmata for Lean.Server.FileWorker.setupFile: (deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)\nWARNING: Failed to calculate equational lemmata for Lean.Meta.FindSplitImpl.visit: maximum recursion depth has been reached\nuse `set_option maxRecDepth <num>` to increase limit\nuse `set_option diagnostics true` to get diagnostic information\nWARNING: Failed to calculate equational lemmata for Lean.Meta.caseValues.loop: (deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)\nWARNING: Failed to calculate equational lemmata for Lean.Elab.Command.elabMacroRulesAux: (deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)\nWARNING: Failed to calculate equational lemmata for Lean.Server.Completion.dotIdCompletion: (deterministic) timeout at `isDefEq`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)\nWARNING: Failed to calculate equational lemmata for Lean.CodeAction.holeCodeActionProvider: failed to generate equality theorems for `match` expression `Lean.CodeAction.holeCodeActionProvider.match_5`\ncase isTrue\nmotive✝ : Array (Lean.Elab.ContextInfo × Lean.Elab.TermInfo) → Sort u_1\nx✝¹ : Array (Lean.Elab.ContextInfo × Lean.Elab.TermInfo)\nh_1✝ : (ctx : Lean.Elab.ContextInfo) → (info : Lean.Elab.TermInfo) → motive✝ #[(ctx, info)]\nh_2✝ : (x : Array (Lean.Elab.ContextInfo × Lean.Elab.TermInfo)) → motive✝ x\nx✝ : ∀ (ctx : Lean.Elab.ContextInfo) (info : Lean.Elab.TermInfo), x✝¹ = #[(ctx, info)] → False\nh✝ : x✝¹.size = 1\n⊢ (⋯ ▸ fun h => ⋯ ▸ Prod.casesOn (x✝¹.getLit 0 ⋯ ⋯) fun fst snd => h_1✝ fst snd) ⋯ = h_2✝ x✝¹\nWARNING: Failed to calculate equational lemmata for Lean.Elab.Tactic.evalGrindCore: (deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)\nWARNING: Failed to calculate equational lemmata for Lean.Meta.Tactic.TryThis.addRewriteSuggestion: (deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)\nWARNING: Failed to calculate equational lemmata for Lean.Elab.Command.elabElabRulesAux: (deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)\nWARNING: Failed to calculate equational lemmata for Lean.PrettyPrinter.Delaborator.SubExpr.withBoundedAppFnArgs: failed to generate equational theorem for 'Lean.PrettyPrinter.Delaborator.SubExpr.withBoundedAppFnArgs'\ncase succ\nα : Type\nm : Type → Type\ninst : Monad m\ninst_1 : MonadReaderOf Lean.SubExpr m\ninst_2 : MonadWithReaderOf Lean.SubExpr m\nxf : m α\nxa : α → m α\nn : Nat\n⊢ (do\n      let __do_lift ← Lean.PrettyPrinter.Delaborator.SubExpr.getExpr\n      (match (motive := (maxArgs : Nat) → Lean.Expr → Nat.rec PUnit (fun n n_ih => m α ×' n_ih) maxArgs → m α) n.succ,\n            __do_lift with\n          | maxArgs'.succ, fn.app arg => fun x => do\n            let acc ← Lean.PrettyPrinter.Delaborator.SubExpr.withAppFn x.1\n            Lean.PrettyPrinter.Delaborator.SubExpr.withAppArg (xa acc)\n          | x, x_1 => fun x => xf)\n          (Nat.rec\n            ⟨do\n              let _ ← Lean.PrettyPrinter.Delaborator.SubExpr.getExpr\n              xf, PUnit.unit⟩\n            (fun n n_ih =>\n              ⟨do\n                let __do_lift ← Lean.PrettyPrinter.Delaborator.SubExpr.getExpr\n                (match (motive := (maxArgs : Nat) → Lean.Expr → Nat.rec PUnit (fun n n_ih => m α ×' n_ih) maxArgs → m α)\n                      n.succ, __do_lift with\n                    | maxArgs'.succ, fn.app arg => fun x => do\n                      let acc ← Lean.PrettyPrinter.Delaborator.SubExpr.withAppFn x.1\n                      Lean.PrettyPrinter.Delaborator.SubExpr.withAppArg (xa acc)\n                    | x, x_1 => fun x => xf)\n                    n_ih,\n                n_ih⟩)\n            n)) =\n    do\n    let __do_lift ← Lean.PrettyPrinter.Delaborator.SubExpr.getExpr\n    match n.succ, __do_lift with\n      | maxArgs'.succ, fn.app arg => do\n        let acc ←\n          Lean.PrettyPrinter.Delaborator.SubExpr.withAppFn\n              (Lean.PrettyPrinter.Delaborator.SubExpr.withBoundedAppFnArgs maxArgs' xf xa)\n        Lean.PrettyPrinter.Delaborator.SubExpr.withAppArg (xa acc)\n      | x, x_1 => xf\nWARNING: Failed to calculate equational lemmata for Lean.Elab.Term.elabMutualDef.go: failed to generate equality theorems for `match` expression `Lean.Elab.Term.elabMutualDef.match_1`\ncase mk.isTrue.isTrue\nmotive✝ : Array Lean.Elab.DefView × Array Lean.Elab.ExpandDeclIdResult → Sort u_1\nh_1✝ : (view : Lean.Elab.DefView) → (declId : Lean.Elab.ExpandDeclIdResult) → motive✝ (#[view], #[declId])\nh_2✝ : (x : Array Lean.Elab.DefView × Array Lean.Elab.ExpandDeclIdResult) → motive✝ x\nfst✝ : Array Lean.Elab.DefView\nsnd✝ : Array Lean.Elab.ExpandDeclIdResult\nx✝ : ∀ (view : Lean.Elab.DefView) (declId : Lean.Elab.ExpandDeclIdResult), (fst✝, snd✝) = (#[view], #[declId]) → False\nh✝¹ : fst✝.size = 1\nh✝ : snd✝.size = 1\n⊢ (⋯ ▸ fun h =>\n        ⋯ ▸\n          Eq.ndrec (motive := fun aSize => aSize = snd✝.size → motive✝ (#[fst✝.getLit 0 ⋯ ⋯], snd✝))\n            (fun h_1 => ⋯ ▸ h_1✝ (fst✝.getLit 0 ⋯ ⋯) (snd✝.getLit 0 ⋯ ⋯)) ⋯ ⋯)\n      ⋯ =\n    h_2✝ (fst✝, snd✝)\nWARNING: Failed to calculate equational lemmata for Lean.Elab.Term.mkCoe: (deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)\nWARNING: Failed to calculate equational lemmata for Lean.Server.moduleFromDocumentUri: (deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)\nWARNING: Failed to calculate equational lemmata for Lean.Expr.name?: (deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached\nUse `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)",
   "level": "info"}],
 "inputs":
 [["/Users/oliver/git/iris-lean/docbuild/.lake/build/doc-data/references.json",
   "11893762902049086281"],
  ["/Users/oliver/git/iris-lean/.lake/packages/doc-gen4/.lake/build/bin/doc-gen4",
   "8370956316283772175"]],
 "depHash": "8347892997107364999"}