{"name":"Lean.Data.NameMap","instances":[{"typeNames":["Lean.NameMap"],"name":"Lean.NameMap.instRepr","className":"Repr"},{"typeNames":["Lean.NameMap"],"name":"Lean.NameMap.instEmptyCollection","className":"EmptyCollection"},{"typeNames":["Lean.NameMap"],"name":"Lean.NameMap.instInhabited","className":"Inhabited"},{"typeNames":["Lean.NameMap","Prod"],"name":"Lean.NameMap.instForInProdName","className":"ForIn"},{"typeNames":["Lean.NameSet"],"name":"Lean.NameSet.instEmptyCollection","className":"EmptyCollection"},{"typeNames":["Lean.NameSet"],"name":"Lean.NameSet.instInhabited","className":"Inhabited"},{"typeNames":["Lean.NameSet","Lean.Name"],"name":"Lean.NameSet.instForInName","className":"ForIn"},{"typeNames":["Lean.NameSet"],"name":"Lean.NameSet.instAppend","className":"Append"},{"typeNames":["Lean.NameSSet"],"name":"Lean.NameSSet.instEmptyCollection","className":"EmptyCollection"},{"typeNames":["Lean.NameSSet"],"name":"Lean.NameSSet.instInhabited","className":"Inhabited"},{"typeNames":["Lean.NameHashSet"],"name":"Lean.NameHashSet.instEmptyCollection","className":"EmptyCollection"},{"typeNames":["Lean.NameHashSet"],"name":"Lean.NameHashSet.instInhabited","className":"Inhabited"}],"imports":["Std.Data.HashSet.Basic","Lean.Data.RBMap","Lean.Data.RBTree","Lean.Data.SSet","Lean.Data.Name"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L101-L105","name":"Lean.MacroScopesView.isSuffixOf","line":101,"kind":"def","docLink":"./Lean/Data/NameMap.html#Lean.MacroScopesView.isSuffixOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.MacroScopesView.isSuffixOf\"><span class=\"name\">Lean</span>.<span class=\"name\">MacroScopesView</span>.<span class=\"name\">isSuffixOf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v₁ </span><span class=\"fn\">v₂</span> : <a href=\"./Init/Prelude.html#Lean.MacroScopesView\">MacroScopesView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L95-L99","name":"Lean.MacroScopesView.isPrefixOf","line":95,"kind":"def","docLink":"./Lean/Data/NameMap.html#Lean.MacroScopesView.isPrefixOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.MacroScopesView.isPrefixOf\"><span class=\"name\">Lean</span>.<span class=\"name\">MacroScopesView</span>.<span class=\"name\">isPrefixOf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v₁ </span><span class=\"fn\">v₂</span> : <a href=\"./Init/Prelude.html#Lean.MacroScopesView\">MacroScopesView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L91-L92","name":"Lean.NameHashSet.filter","line":91,"kind":"def","docLink":"./Lean/Data/NameMap.html#Lean.NameHashSet.filter","doc":"`filter f s` returns the `NameHashSet` consisting of all `x` in `s` where `f x` returns `true`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameHashSet.filter\"><span class=\"name\">Lean</span>.<span class=\"name\">NameHashSet</span>.<span class=\"name\">filter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Data/NameMap.html#Lean.NameHashSet\">NameHashSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap.html#Lean.NameHashSet\">NameHashSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L89-L89","name":"Lean.NameHashSet.contains","line":89,"kind":"def","docLink":"./Lean/Data/NameMap.html#Lean.NameHashSet.contains","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameHashSet.contains\"><span class=\"name\">Lean</span>.<span class=\"name\">NameHashSet</span>.<span class=\"name\">contains</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Data/NameMap.html#Lean.NameHashSet\">NameHashSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L88-L88","name":"Lean.NameHashSet.insert","line":88,"kind":"def","docLink":"./Lean/Data/NameMap.html#Lean.NameHashSet.insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameHashSet.insert\"><span class=\"name\">Lean</span>.<span class=\"name\">NameHashSet</span>.<span class=\"name\">insert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Data/NameMap.html#Lean.NameHashSet\">NameHashSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L87-L87","name":"Lean.NameHashSet.instInhabited","line":87,"kind":"instance","docLink":"./Lean/Data/NameMap.html#Lean.NameHashSet.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameHashSet.instInhabited\"><span class=\"name\">Lean</span>.<span class=\"name\">NameHashSet</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Data/NameMap.html#Lean.NameHashSet\">NameHashSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L86-L86","name":"Lean.NameHashSet.instEmptyCollection","line":86,"kind":"instance","docLink":"./Lean/Data/NameMap.html#Lean.NameHashSet.instEmptyCollection","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameHashSet.instEmptyCollection\"><span class=\"name\">Lean</span>.<span class=\"name\">NameHashSet</span>.<span class=\"name\">instEmptyCollection</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <a href=\"./Lean/Data/NameMap.html#Lean.NameHashSet\">NameHashSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L85-L85","name":"Lean.NameHashSet.empty","line":85,"kind":"def","docLink":"./Lean/Data/NameMap.html#Lean.NameHashSet.empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameHashSet.empty\"><span class=\"name\">Lean</span>.<span class=\"name\">NameHashSet</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap.html#Lean.NameHashSet\">NameHashSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L82-L82","name":"Lean.NameHashSet","line":82,"kind":"def","docLink":"./Lean/Data/NameMap.html#Lean.NameHashSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameHashSet\"><span class=\"name\">Lean</span>.<span class=\"name\">NameHashSet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L79-L79","name":"Lean.NameSSet.contains","line":79,"kind":"def","docLink":"./Lean/Data/NameMap.html#Lean.NameSSet.contains","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameSSet.contains\"><span class=\"name\">Lean</span>.<span class=\"name\">NameSSet</span>.<span class=\"name\">contains</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Data/NameMap.html#Lean.NameSSet\">NameSSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L78-L78","name":"Lean.NameSSet.insert","line":78,"kind":"def","docLink":"./Lean/Data/NameMap.html#Lean.NameSSet.insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameSSet.insert\"><span class=\"name\">Lean</span>.<span class=\"name\">NameSSet</span>.<span class=\"name\">insert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Data/NameMap.html#Lean.NameSSet\">NameSSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap.html#Lean.NameSSet\">NameSSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L77-L77","name":"Lean.NameSSet.instInhabited","line":77,"kind":"instance","docLink":"./Lean/Data/NameMap.html#Lean.NameSSet.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameSSet.instInhabited\"><span class=\"name\">Lean</span>.<span class=\"name\">NameSSet</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Data/NameMap.html#Lean.NameSSet\">NameSSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L76-L76","name":"Lean.NameSSet.instEmptyCollection","line":76,"kind":"instance","docLink":"./Lean/Data/NameMap.html#Lean.NameSSet.instEmptyCollection","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameSSet.instEmptyCollection\"><span class=\"name\">Lean</span>.<span class=\"name\">NameSSet</span>.<span class=\"name\">instEmptyCollection</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <a href=\"./Lean/Data/NameMap.html#Lean.NameSSet\">NameSSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L75-L75","name":"Lean.NameSSet.empty","line":75,"kind":"def","docLink":"./Lean/Data/NameMap.html#Lean.NameSSet.empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameSSet.empty\"><span class=\"name\">Lean</span>.<span class=\"name\">NameSSet</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap.html#Lean.NameSSet\">NameSSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L72-L72","name":"Lean.NameSSet","line":72,"kind":"def","docLink":"./Lean/Data/NameMap.html#Lean.NameSSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameSSet\"><span class=\"name\">Lean</span>.<span class=\"name\">NameSSet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L67-L68","name":"Lean.NameSet.filter","line":67,"kind":"def","docLink":"./Lean/Data/NameMap.html#Lean.NameSet.filter","doc":"`filter f s` returns the `NameSet` consisting of all `x` in `s` where `f x` returns `true`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameSet.filter\"><span class=\"name\">Lean</span>.<span class=\"name\">NameSet</span>.<span class=\"name\">filter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L64-L65","name":"Lean.NameSet.instAppend","line":64,"kind":"instance","docLink":"./Lean/Data/NameMap.html#Lean.NameSet.instAppend","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameSet.instAppend\"><span class=\"name\">Lean</span>.<span class=\"name\">NameSet</span>.<span class=\"name\">instAppend</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Append\">Append</a> <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L60-L62","name":"Lean.NameSet.append","line":60,"kind":"def","docLink":"./Lean/Data/NameMap.html#Lean.NameSet.append","doc":"The union of two `NameSet`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameSet.append\"><span class=\"name\">Lean</span>.<span class=\"name\">NameSet</span>.<span class=\"name\">append</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">t</span> : <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L57-L58","name":"Lean.NameSet.instForInName","line":57,"kind":"instance","docLink":"./Lean/Data/NameMap.html#Lean.NameSet.instForInName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameSet.instForInName\"><span class=\"name\">Lean</span>.<span class=\"name\">NameSet</span>.<span class=\"name\">instForInName</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#ForIn\">ForIn</a> <span class=\"fn\">m</span> <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L56-L56","name":"Lean.NameSet.contains","line":56,"kind":"def","docLink":"./Lean/Data/NameMap.html#Lean.NameSet.contains","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameSet.contains\"><span class=\"name\">Lean</span>.<span class=\"name\">NameSet</span>.<span class=\"name\">contains</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L55-L55","name":"Lean.NameSet.insert","line":55,"kind":"def","docLink":"./Lean/Data/NameMap.html#Lean.NameSet.insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameSet.insert\"><span class=\"name\">Lean</span>.<span class=\"name\">NameSet</span>.<span class=\"name\">insert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L54-L54","name":"Lean.NameSet.instInhabited","line":54,"kind":"instance","docLink":"./Lean/Data/NameMap.html#Lean.NameSet.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameSet.instInhabited\"><span class=\"name\">Lean</span>.<span class=\"name\">NameSet</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L53-L53","name":"Lean.NameSet.instEmptyCollection","line":53,"kind":"instance","docLink":"./Lean/Data/NameMap.html#Lean.NameSet.instEmptyCollection","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameSet.instEmptyCollection\"><span class=\"name\">Lean</span>.<span class=\"name\">NameSet</span>.<span class=\"name\">instEmptyCollection</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L52-L52","name":"Lean.NameSet.empty","line":52,"kind":"def","docLink":"./Lean/Data/NameMap.html#Lean.NameSet.empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameSet.empty\"><span class=\"name\">Lean</span>.<span class=\"name\">NameSet</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L49-L49","name":"Lean.NameSet","line":49,"kind":"def","docLink":"./Lean/Data/NameMap.html#Lean.NameSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameSet\"><span class=\"name\">Lean</span>.<span class=\"name\">NameSet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L41-L45","name":"Lean.NameMap.filterMap","line":41,"kind":"def","docLink":"./Lean/Data/NameMap.html#Lean.NameMap.filterMap","doc":"`filterMap f m` filters an `NameMap` and simultaneously modifies the filtered values.\n\nIt takes a function `f : Name → α → Option β` and applies `f name` to the value with key `name`.\nThe resulting entries with non-`none` value are collected to form the output `NameMap`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameMap.filterMap\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMap</span>.<span class=\"name\">filterMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">β</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L37-L39","name":"Lean.NameMap.filter","line":37,"kind":"def","docLink":"./Lean/Data/NameMap.html#Lean.NameMap.filter","doc":"`filter f m` returns the `NameMap` consisting of all\n\"`key`/`val`\"-pairs in `m` where `f key val` returns `true`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameMap.filter\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMap</span>.<span class=\"name\">filter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L34-L35","name":"Lean.NameMap.instForInProdName","line":34,"kind":"instance","docLink":"./Lean/Data/NameMap.html#Lean.NameMap.instForInProdName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameMap.instForInProdName\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMap</span>.<span class=\"name\">instForInProdName</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#ForIn\">ForIn</a> <span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">α</span>)</span> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L32-L32","name":"Lean.NameMap.find?","line":32,"kind":"def","docLink":"./Lean/Data/NameMap.html#Lean.NameMap.find?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameMap.find?\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMap</span>.<span class=\"name\">find?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L30-L30","name":"Lean.NameMap.contains","line":30,"kind":"def","docLink":"./Lean/Data/NameMap.html#Lean.NameMap.contains","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameMap.contains\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMap</span>.<span class=\"name\">contains</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L28-L28","name":"Lean.NameMap.insert","line":28,"kind":"def","docLink":"./Lean/Data/NameMap.html#Lean.NameMap.insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameMap.insert\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMap</span>.<span class=\"name\">insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/RBMap.html#Lean.RBMap\">RBMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <span class=\"fn\">α</span> <a href=\"./Lean/Data/Name.html#Lean.Name.quickCmp\">Name.quickCmp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L25-L26","name":"Lean.NameMap.instInhabited","line":25,"kind":"instance","docLink":"./Lean/Data/NameMap.html#Lean.NameMap.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameMap.instInhabited\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMap</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L23-L23","name":"Lean.NameMap.instEmptyCollection","line":23,"kind":"instance","docLink":"./Lean/Data/NameMap.html#Lean.NameMap.instEmptyCollection","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameMap.instEmptyCollection\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMap</span>.<span class=\"name\">instEmptyCollection</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <span class=\"fn\">(<a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L21-L21","name":"Lean.NameMap.instRepr","line":21,"kind":"instance","docLink":"./Lean/Data/NameMap.html#Lean.NameMap.instRepr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameMap.instRepr\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMap</span>.<span class=\"name\">instRepr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">(<a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L16-L16","name":"Lean.mkNameMap","line":16,"kind":"def","docLink":"./Lean/Data/NameMap.html#Lean.mkNameMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.mkNameMap\"><span class=\"name\">Lean</span>.<span class=\"name\">mkNameMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Data/NameMap.lean#L14-L14","name":"Lean.NameMap","line":14,"kind":"def","docLink":"./Lean/Data/NameMap.html#Lean.NameMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/NameMap.html#Lean.NameMap\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}