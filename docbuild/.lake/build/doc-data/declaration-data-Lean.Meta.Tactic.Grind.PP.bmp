{"name":"Lean.Meta.Tactic.Grind.PP","instances":[],"imports":["Init.Grind.Util","Init.Grind.PP","Lean.Meta.Tactic.Grind.Types","Lean.Meta.Tactic.Grind.Arith.Model","Lean.Meta.Tactic.Grind.Arith.CommRing.PP"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/Grind/PP.lean#L188-L196","name":"Lean.Meta.Grind.goalToMessageData.go","line":188,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/PP.html#Lean.Meta.Grind.goalToMessageData.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/PP.html#Lean.Meta.Grind.goalToMessageData.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">goalToMessageData</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Goal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">config</span> : <a href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\">Grind.Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/PP.html#_private.Lean.Meta.Tactic.Grind.PP.0.Lean.Meta.Grind.M\">Lean.Meta.Grind.M‚úù</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/Grind/PP.lean#L179-L196","name":"Lean.Meta.Grind.goalToMessageData","line":179,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/PP.html#Lean.Meta.Grind.goalToMessageData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/PP.html#Lean.Meta.Grind.goalToMessageData\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">goalToMessageData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Goal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">config</span> : <a href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\">Grind.Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Message.html#Lean.MessageData\">MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/Grind/PP.lean#L81-L83","name":"Lean.Meta.Grind.ppExprArray","line":81,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/PP.html#Lean.Meta.Grind.ppExprArray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/PP.html#Lean.Meta.Grind.ppExprArray\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">ppExprArray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cls</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">header</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">es</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">clsElem</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name.mkSimple\">Name.mkSimple</a> <span class=\"fn\">&quot;_&quot;</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageData\">MessageData</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/Grind/PP.lean#L69-L74","name":"Lean.Meta.Grind.ppGoals","line":69,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/PP.html#Lean.Meta.Grind.ppGoals","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/PP.html#Lean.Meta.Grind.ppGoals\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">ppGoals</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Goal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Message.html#Lean.MessageData\">MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/Grind/PP.lean#L57-L67","name":"Lean.Meta.Grind.Goal.ppState","line":57,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/PP.html#Lean.Meta.Grind.Goal.ppState","doc":"Pretty print goal state for debugging purposes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/PP.html#Lean.Meta.Grind.Goal.ppState\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Goal</span>.<span class=\"name\">ppState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Goal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Message.html#Lean.MessageData\">MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/Grind/PP.lean#L23-L25","name":"Lean.Meta.Grind.ppENodeRef","line":23,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/PP.html#Lean.Meta.Grind.ppENodeRef","doc":"Helper function for pretty printing the state for debugging purposes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/PP.html#Lean.Meta.Grind.ppENodeRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">ppENodeRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Lean/Message.html#Lean.MessageData\">MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/Grind/PP.lean#L15-L21","name":"Lean.Meta.Grind.Goal.ppENodeRef","line":15,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/PP.html#Lean.Meta.Grind.Goal.ppENodeRef","doc":"Helper function for pretty printing the state for debugging purposes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/PP.html#Lean.Meta.Grind.Goal.ppENodeRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Goal</span>.<span class=\"name\">ppENodeRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.Goal\">Goal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Message.html#Lean.MessageData\">MessageData</a></span></div></div>"}]}