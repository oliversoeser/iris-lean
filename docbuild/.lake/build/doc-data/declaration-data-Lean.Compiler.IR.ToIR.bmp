{"name":"Lean.Compiler.IR.ToIR","instances":[{"typeNames":["Lean.IR.ToIR.TranslatedProj"],"name":"Lean.IR.ToIR.instInhabitedTranslatedProj","className":"Inhabited"}],"imports":["Lean.Compiler.LCNF.Basic","Lean.Compiler.LCNF.CompilerM","Lean.Compiler.LCNF.PhaseExt","Lean.Compiler.IR.Basic","Lean.Compiler.IR.CompilerM","Lean.Compiler.IR.CtorLayout","Lean.CoreM","Lean.Environment"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L409-L414","name":"Lean.IR.toIR","line":409,"kind":"def","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.toIR","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.toIR\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">toIR</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Compiler.LCNF.Decl</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L391-L405","name":"Lean.IR.ToIR.lowerDecl","line":391,"kind":"def","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Compiler.LCNF.Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L382-L389","name":"Lean.IR.ToIR.lowerResultType.resultTypeForArity","line":382,"kind":"def","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerResultType.resultTypeForArity","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerResultType.resultTypeForArity\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerResultType</span>.<span class=\"name\">resultTypeForArity</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arity</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L380-L389","name":"Lean.IR.ToIR.lowerResultType","line":380,"kind":"def","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerResultType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerResultType\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerResultType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arity</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L358-L372","name":"Lean.IR.ToIR.lowerAlt.loop","line":358,"kind":"opaque","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerAlt.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerAlt.loop\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerAlt</span>.<span class=\"name\">loop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">discr</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">code</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Compiler.LCNF.Code</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctorInfo</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo\">CtorInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">params</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param\">Compiler.LCNF.Param</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fields</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/CtorLayout.html#Lean.IR.CtorFieldInfo\">CtorFieldInfo</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L353-L377","name":"Lean.IR.ToIR.lowerAlt","line":353,"kind":"opaque","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerAlt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerAlt\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerAlt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">discr</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Alt\">Compiler.LCNF.Alt</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Alt\">Alt</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L289-L304","name":"Lean.IR.ToIR.lowerLet.lowerNonObjectFields.loop","line":289,"kind":"opaque","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerLet.lowerNonObjectFields.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerLet.lowerNonObjectFields.loop\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerLet</span>.<span class=\"name\">lowerNonObjectFields</span>.<span class=\"name\">loop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Compiler.LCNF.Code</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctorInfo</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo\">CtorInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fields</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/CtorLayout.html#Lean.IR.CtorFieldInfo\">CtorFieldInfo</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg\">Compiler.LCNF.Arg</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">objVar</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">usizeCount </span><span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L288-L305","name":"Lean.IR.ToIR.lowerLet.lowerNonObjectFields","line":288,"kind":"opaque","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerLet.lowerNonObjectFields","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerLet.lowerNonObjectFields\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerLet</span>.<span class=\"name\">lowerNonObjectFields</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Compiler.LCNF.Code</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctorInfo</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo\">CtorInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fields</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/CtorLayout.html#Lean.IR.CtorFieldInfo\">CtorFieldInfo</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg\">Compiler.LCNF.Arg</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">objVar</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Unit\">Unit</a> → <span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L215-L228","name":"Lean.IR.ToIR.lowerLet.tryIrDecl?","line":215,"kind":"opaque","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerLet.tryIrDecl?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerLet.tryIrDecl?\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerLet</span>.<span class=\"name\">tryIrDecl?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl\">Compiler.LCNF.LetDecl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Compiler.LCNF.Code</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L208-L214","name":"Lean.IR.ToIR.lowerLet.mkPartialApp","line":208,"kind":"opaque","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerLet.mkPartialApp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerLet.mkPartialApp\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerLet</span>.<span class=\"name\">mkPartialApp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl\">Compiler.LCNF.LetDecl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Compiler.LCNF.Code</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">restArgs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L205-L207","name":"Lean.IR.ToIR.lowerLet.mkErased","line":205,"kind":"opaque","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerLet.mkErased","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerLet.mkErased\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerLet</span>.<span class=\"name\">mkErased</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl\">Compiler.LCNF.LetDecl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Compiler.LCNF.Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Unit\">Unit</a> → <span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L199-L204","name":"Lean.IR.ToIR.lowerLet.mkExpr","line":199,"kind":"opaque","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerLet.mkExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerLet.mkExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerLet</span>.<span class=\"name\">mkExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl\">Compiler.LCNF.LetDecl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Compiler.LCNF.Code</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L196-L198","name":"Lean.IR.ToIR.lowerLet.mkVar","line":196,"kind":"opaque","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerLet.mkVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerLet.mkVar\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerLet</span>.<span class=\"name\">mkVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl\">Compiler.LCNF.LetDecl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Compiler.LCNF.Code</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L194-L351","name":"Lean.IR.ToIR.lowerLet","line":194,"kind":"opaque","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerLet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerLet\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerLet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl\">Compiler.LCNF.LetDecl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Compiler.LCNF.Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L164-L192","name":"Lean.IR.ToIR.lowerCode","line":164,"kind":"opaque","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerCode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerCode\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerCode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Compiler.LCNF.Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L158-L161","name":"Lean.IR.ToIR.lowerParam","line":158,"kind":"def","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerParam","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerParam\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerParam</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param\">Compiler.LCNF.Param</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Param\">Param</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L150-L156","name":"Lean.IR.ToIR.lowerProj","line":150,"kind":"def","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerProj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerProj\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerProj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">base</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctorInfo</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo\">CtorInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">field</span> : <a href=\"./Lean/Compiler/IR/CtorLayout.html#Lean.IR.CtorFieldInfo\">CtorFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.TranslatedProj\">TranslatedProj</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L148-L148","name":"Lean.IR.ToIR.instInhabitedTranslatedProj","line":148,"kind":"instance","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.instInhabitedTranslatedProj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.instInhabitedTranslatedProj\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">instInhabitedTranslatedProj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.TranslatedProj\">TranslatedProj</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L147-L147","name":"Lean.IR.ToIR.TranslatedProj.erased","line":147,"kind":"ctor","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.TranslatedProj.erased","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.TranslatedProj.erased\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">TranslatedProj</span>.<span class=\"name\">erased</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.TranslatedProj\">TranslatedProj</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L146-L146","name":"Lean.IR.ToIR.TranslatedProj.expr","line":146,"kind":"ctor","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.TranslatedProj.expr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.TranslatedProj.expr\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">TranslatedProj</span>.<span class=\"name\">expr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.TranslatedProj\">TranslatedProj</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L145-L148","name":"Lean.IR.ToIR.TranslatedProj","line":145,"kind":"inductive","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.TranslatedProj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.TranslatedProj\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">TranslatedProj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L136-L143","name":"Lean.IR.ToIR.lowerArg","line":136,"kind":"def","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerArg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerArg\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg\">Compiler.LCNF.Arg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L124-L134","name":"Lean.IR.ToIR.getCtorInfo","line":124,"kind":"def","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.getCtorInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.getCtorInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">getCtorInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> (<a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo\">CtorInfo</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/CtorLayout.html#Lean.IR.CtorFieldInfo\">CtorFieldInfo</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L95-L121","name":"Lean.IR.ToIR.lowerType","line":95,"kind":"def","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerType\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L76-L93","name":"Lean.IR.ToIR.lowerEnumToScalarType","line":76,"kind":"def","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerEnumToScalarType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerEnumToScalarType\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerEnumToScalarType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L66-L73","name":"Lean.IR.ToIR.lowerLitValue","line":66,"kind":"def","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerLitValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerLitValue\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerLitValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LitValue\">Compiler.LCNF.LitValue</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.LitVal\">LitVal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L63-L64","name":"Lean.IR.ToIR.addDecl","line":63,"kind":"def","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.addDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.addDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">addDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L60-L61","name":"Lean.IR.ToIR.findDecl","line":60,"kind":"def","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.findDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.findDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">findDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L57-L58","name":"Lean.IR.ToIR.bindErased","line":57,"kind":"def","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.bindErased","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.bindErased\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">bindErased</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L51-L55","name":"Lean.IR.ToIR.bindJoinPoint","line":51,"kind":"def","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.bindJoinPoint","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.bindJoinPoint\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">bindJoinPoint</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId\">JoinPointId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L46-L49","name":"Lean.IR.ToIR.newVar","line":46,"kind":"def","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.newVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.newVar\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">newVar</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L43-L44","name":"Lean.IR.ToIR.bindVarToVarId","line":43,"kind":"def","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.bindVarToVarId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.bindVarToVarId\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">bindVarToVarId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">varId</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L37-L41","name":"Lean.IR.ToIR.bindVar","line":37,"kind":"def","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.bindVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.bindVar\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">bindVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L34-L35","name":"Lean.IR.ToIR.M.run","line":34,"kind":"def","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M.run","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M.run\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">M</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L32-L32","name":"Lean.IR.ToIR.M","line":32,"kind":"def","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L30-L30","name":"Lean.IR.ToIR.BuilderState.nextId","line":30,"kind":"def","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.BuilderState.nextId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.BuilderState.nextId\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">BuilderState</span>.<span class=\"name\">nextId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.BuilderState\">BuilderState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L29-L29","name":"Lean.IR.ToIR.BuilderState.fvars","line":29,"kind":"def","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.BuilderState.fvars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.BuilderState.fvars\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">BuilderState</span>.<span class=\"name\">fvars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.BuilderState\">BuilderState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a> <a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.FVarClassification\">FVarClassification</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L28-L28","name":"Lean.IR.ToIR.BuilderState.mk","line":28,"kind":"ctor","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.BuilderState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.BuilderState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">BuilderState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvars</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a> <a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.FVarClassification\">FVarClassification</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nextId</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.BuilderState\">BuilderState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L28-L30","name":"Lean.IR.ToIR.BuilderState","line":28,"kind":"structure","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.BuilderState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.BuilderState\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">BuilderState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L26-L26","name":"Lean.IR.ToIR.FVarClassification.erased","line":26,"kind":"ctor","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.FVarClassification.erased","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.FVarClassification.erased\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">FVarClassification</span>.<span class=\"name\">erased</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.FVarClassification\">FVarClassification</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L25-L25","name":"Lean.IR.ToIR.FVarClassification.joinPoint","line":25,"kind":"ctor","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.FVarClassification.joinPoint","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.FVarClassification.joinPoint\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">FVarClassification</span>.<span class=\"name\">joinPoint</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId\">JoinPointId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.FVarClassification\">FVarClassification</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L24-L24","name":"Lean.IR.ToIR.FVarClassification.var","line":24,"kind":"ctor","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.FVarClassification.var","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.FVarClassification.var\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">FVarClassification</span>.<span class=\"name\">var</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.FVarClassification\">FVarClassification</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/IR/ToIR.lean#L23-L26","name":"Lean.IR.ToIR.FVarClassification","line":23,"kind":"inductive","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.FVarClassification","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.FVarClassification\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">FVarClassification</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}