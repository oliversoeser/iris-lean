{"name":"Lean.Compiler.LCNF.ExtractClosed","instances":[],"imports":["Lean.Compiler.ClosedTermCache","Lean.Compiler.NeverExtractAttr","Lean.Compiler.LCNF.Basic","Lean.Compiler.LCNF.InferType","Lean.Compiler.LCNF.Internalize","Lean.Compiler.LCNF.MonoTypes","Lean.Compiler.LCNF.PassManager","Lean.Compiler.LCNF.ToExpr"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/ExtractClosed.lean#L148-L152","name":"Lean.Compiler.LCNF.extractClosed","line":148,"kind":"def","docLink":"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.extractClosed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.extractClosed\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">extractClosed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/PassManager.html#Lean.Compiler.LCNF.Pass\">Pass</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/ExtractClosed.lean#L144-L146","name":"Lean.Compiler.LCNF.Decl.extractClosed","line":144,"kind":"def","docLink":"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.Decl.extractClosed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.Decl.extractClosed\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Decl</span>.<span class=\"name\">extractClosed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sccDecls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/ExtractClosed.lean#L138-L140","name":"Lean.Compiler.LCNF.ExtractClosed.visitDecl","line":138,"kind":"def","docLink":"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.visitDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.visitDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">ExtractClosed</span>.<span class=\"name\">visitDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.M\">M</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/ExtractClosed.lean#L100-L134","name":"Lean.Compiler.LCNF.ExtractClosed.visitCode","line":100,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.visitCode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.visitCode\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">ExtractClosed</span>.<span class=\"name\">visitCode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">code</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.M\">M</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/ExtractClosed.lean#L90-L94","name":"Lean.Compiler.LCNF.ExtractClosed.shouldExtractFVar","line":90,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.shouldExtractFVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.shouldExtractFVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">ExtractClosed</span>.<span class=\"name\">shouldExtractFVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.M\">M</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/ExtractClosed.lean#L85-L88","name":"Lean.Compiler.LCNF.ExtractClosed.shouldExtractArg","line":85,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.shouldExtractArg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.shouldExtractArg\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">ExtractClosed</span>.<span class=\"name\">shouldExtractArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arg</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg\">Arg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.M\">M</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/ExtractClosed.lean#L60-L83","name":"Lean.Compiler.LCNF.ExtractClosed.shouldExtractLetValue","line":60,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.shouldExtractLetValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.shouldExtractLetValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">ExtractClosed</span>.<span class=\"name\">shouldExtractLetValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isRoot</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetValue\">LetValue</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.M\">M</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/ExtractClosed.lean#L56-L56","name":"Lean.Compiler.LCNF.ExtractClosed.M","line":56,"kind":"def","docLink":"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.M","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">ExtractClosed</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/ExtractClosed.lean#L54-L54","name":"Lean.Compiler.LCNF.ExtractClosed.State.decls","line":54,"kind":"def","docLink":"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.State.decls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.State.decls\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">ExtractClosed</span>.<span class=\"name\">State</span>.<span class=\"name\">decls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/ExtractClosed.lean#L53-L53","name":"Lean.Compiler.LCNF.ExtractClosed.State.mk","line":53,"kind":"ctor","docLink":"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">ExtractClosed</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.State\">State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/ExtractClosed.lean#L53-L54","name":"Lean.Compiler.LCNF.ExtractClosed.State","line":53,"kind":"structure","docLink":"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">ExtractClosed</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/ExtractClosed.lean#L51-L51","name":"Lean.Compiler.LCNF.ExtractClosed.Context.sccDecls","line":51,"kind":"def","docLink":"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.Context.sccDecls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.Context.sccDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">ExtractClosed</span>.<span class=\"name\">Context</span>.<span class=\"name\">sccDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/ExtractClosed.lean#L50-L50","name":"Lean.Compiler.LCNF.ExtractClosed.Context.baseName","line":50,"kind":"def","docLink":"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.Context.baseName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.Context.baseName\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">ExtractClosed</span>.<span class=\"name\">Context</span>.<span class=\"name\">baseName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/ExtractClosed.lean#L49-L49","name":"Lean.Compiler.LCNF.ExtractClosed.Context.mk","line":49,"kind":"ctor","docLink":"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.Context.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">ExtractClosed</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">baseName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sccDecls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.Context\">Context</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/ExtractClosed.lean#L49-L51","name":"Lean.Compiler.LCNF.ExtractClosed.Context","line":49,"kind":"structure","docLink":"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.Context","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">ExtractClosed</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/ExtractClosed.lean#L44-L47","name":"Lean.Compiler.LCNF.ExtractClosed.isIrrelevantArg","line":44,"kind":"def","docLink":"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.isIrrelevantArg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.isIrrelevantArg\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">ExtractClosed</span>.<span class=\"name\">isIrrelevantArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arg</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg\">Arg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/ExtractClosed.lean#L37-L40","name":"Lean.Compiler.LCNF.ExtractClosed.extractFVar","line":37,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.extractFVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.extractFVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">ExtractClosed</span>.<span class=\"name\">extractFVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.ExtractM\">ExtractM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/ExtractClosed.lean#L32-L35","name":"Lean.Compiler.LCNF.ExtractClosed.extractArg","line":32,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.extractArg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.extractArg\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">ExtractClosed</span>.<span class=\"name\">extractArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arg</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg\">Arg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.ExtractM\">ExtractM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/ExtractClosed.lean#L23-L30","name":"Lean.Compiler.LCNF.ExtractClosed.extractLetValue","line":23,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.extractLetValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.extractLetValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">ExtractClosed</span>.<span class=\"name\">extractLetValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetValue\">LetValue</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.ExtractM\">ExtractM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/ExtractClosed.lean#L19-L19","name":"Lean.Compiler.LCNF.ExtractClosed.ExtractM","line":19,"kind":"def","docLink":"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.ExtractM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/ExtractClosed.html#Lean.Compiler.LCNF.ExtractClosed.ExtractM\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">ExtractClosed</span>.<span class=\"name\">ExtractM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}