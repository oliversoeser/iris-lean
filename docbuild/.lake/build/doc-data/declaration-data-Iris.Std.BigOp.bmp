{"name":"Iris.Std.BigOp","instances":[],"imports":["Init"],"declarations":[{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/Std/BigOp.lean#L36-L40","name":"Iris.Std.bigOp_cons","line":36,"kind":"theorem","docLink":"./Iris/Std/BigOp.html#Iris.Std.bigOp_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/Std/BigOp.html#Iris.Std.bigOp_cons\"><span class=\"name\">Iris</span>.<span class=\"name\">Std</span>.<span class=\"name\">bigOp_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">eq</span> : <span class=\"fn\"><span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">PROP</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">unit</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp\">LawfulBigOp</a> <span class=\"fn\">f</span> <span class=\"fn\">unit</span> <span class=\"fn\">eq</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">(<a href=\"./Iris/Std/BigOp.html#Iris.Std.bigOp\">bigOp</a> <span class=\"fn\">f</span> <span class=\"fn\">unit</span> (<span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">Ps</span>))</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span> <span class=\"fn\">(<a href=\"./Iris/Std/BigOp.html#Iris.Std.bigOp\">bigOp</a> <span class=\"fn\">f</span> <span class=\"fn\">unit</span> <span class=\"fn\">Ps</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/Std/BigOp.lean#L34-L34","name":"Iris.Std.bigOp_nil","line":34,"kind":"theorem","docLink":"./Iris/Std/BigOp.html#Iris.Std.bigOp_nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/Std/BigOp.html#Iris.Std.bigOp_nil\"><span class=\"name\">Iris</span>.<span class=\"name\">Std</span>.<span class=\"name\">bigOp_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">unit</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Iris/Std/BigOp.html#Iris.Std.bigOp\">bigOp</a> <span class=\"fn\">f</span> <span class=\"fn\">unit</span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">unit</span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/Std/BigOp.lean#L28-L30","name":"Iris.Std.LawfulBigOp.congr_r","line":28,"kind":"theorem","docLink":"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp.congr_r","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp.congr_r\"><span class=\"name\">Iris</span>.<span class=\"name\">Std</span>.<span class=\"name\">LawfulBigOp</span>.<span class=\"name\">congr_r</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">unit</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">eq</span> : <span class=\"fn\"><span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b </span><span class=\"fn\">b' </span><span class=\"fn\">a</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp\">LawfulBigOp</a> <span class=\"fn\">f</span> <span class=\"fn\">unit</span> <span class=\"fn\">eq</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">b</span> <span class=\"fn\">b'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b'</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/Std/BigOp.lean#L25-L26","name":"Iris.Std.LawfulBigOp.right_id","line":25,"kind":"theorem","docLink":"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp.right_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp.right_id\"><span class=\"name\">Iris</span>.<span class=\"name\">Std</span>.<span class=\"name\">LawfulBigOp</span>.<span class=\"name\">right_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">unit</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">eq</span> : <span class=\"fn\"><span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp\">LawfulBigOp</a> <span class=\"fn\">f</span> <span class=\"fn\">unit</span> <span class=\"fn\">eq</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">unit</span>)</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/Std/BigOp.lean#L23-L23","name":"Iris.Std.LawfulBigOp.congr_l","line":23,"kind":"theorem","docLink":"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp.congr_l","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp.congr_l\"><span class=\"name\">Iris</span>.<span class=\"name\">Std</span>.<span class=\"name\">LawfulBigOp</span>.<span class=\"name\">congr_l</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">unit</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">PROP</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">eq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <a href=\"./foundational_types.html\">Prop</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp\">LawfulBigOp</a> <span class=\"fn\">f</span> <span class=\"fn\">unit</span> <span class=\"fn\">eq</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">a' </span><span class=\"fn\">b</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">a</span> <span class=\"fn\">a'</span></span> → <span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">a'</span> <span class=\"fn\">b</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/Std/BigOp.lean#L22-L22","name":"Iris.Std.LawfulBigOp.left_id","line":22,"kind":"theorem","docLink":"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp.left_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp.left_id\"><span class=\"name\">Iris</span>.<span class=\"name\">Std</span>.<span class=\"name\">LawfulBigOp</span>.<span class=\"name\">left_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">unit</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">PROP</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">eq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <a href=\"./foundational_types.html\">Prop</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp\">LawfulBigOp</a> <span class=\"fn\">f</span> <span class=\"fn\">unit</span> <span class=\"fn\">eq</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">unit</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/Std/BigOp.lean#L21-L21","name":"Iris.Std.LawfulBigOp.assoc","line":21,"kind":"theorem","docLink":"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp.assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp.assoc\"><span class=\"name\">Iris</span>.<span class=\"name\">Std</span>.<span class=\"name\">LawfulBigOp</span>.<span class=\"name\">assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">unit</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">PROP</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">eq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <a href=\"./foundational_types.html\">Prop</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp\">LawfulBigOp</a> <span class=\"fn\">f</span> <span class=\"fn\">unit</span> <span class=\"fn\">eq</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">c</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/Std/BigOp.lean#L20-L20","name":"Iris.Std.LawfulBigOp.comm","line":20,"kind":"theorem","docLink":"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp.comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp.comm\"><span class=\"name\">Iris</span>.<span class=\"name\">Std</span>.<span class=\"name\">LawfulBigOp</span>.<span class=\"name\">comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">unit</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">PROP</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">eq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <a href=\"./foundational_types.html\">Prop</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp\">LawfulBigOp</a> <span class=\"fn\">f</span> <span class=\"fn\">unit</span> <span class=\"fn\">eq</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">b</span> <span class=\"fn\">a</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/Std/BigOp.lean#L19-L19","name":"Iris.Std.LawfulBigOp.trans","line":19,"kind":"theorem","docLink":"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp.trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp.trans\"><span class=\"name\">Iris</span>.<span class=\"name\">Std</span>.<span class=\"name\">LawfulBigOp</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">unit</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">PROP</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">eq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <a href=\"./foundational_types.html\">Prop</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp\">LawfulBigOp</a> <span class=\"fn\">f</span> <span class=\"fn\">unit</span> <span class=\"fn\">eq</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span> → <span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/Std/BigOp.lean#L18-L18","name":"Iris.Std.LawfulBigOp.symm","line":18,"kind":"theorem","docLink":"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp.symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp.symm\"><span class=\"name\">Iris</span>.<span class=\"name\">Std</span>.<span class=\"name\">LawfulBigOp</span>.<span class=\"name\">symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">unit</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">PROP</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">eq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <a href=\"./foundational_types.html\">Prop</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp\">LawfulBigOp</a> <span class=\"fn\">f</span> <span class=\"fn\">unit</span> <span class=\"fn\">eq</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">b</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/Std/BigOp.lean#L17-L17","name":"Iris.Std.LawfulBigOp.refl","line":17,"kind":"theorem","docLink":"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp.refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp.refl\"><span class=\"name\">Iris</span>.<span class=\"name\">Std</span>.<span class=\"name\">LawfulBigOp</span>.<span class=\"name\">refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">unit</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">PROP</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">eq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <a href=\"./foundational_types.html\">Prop</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp\">LawfulBigOp</a> <span class=\"fn\">f</span> <span class=\"fn\">unit</span> <span class=\"fn\">eq</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">a</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/Std/BigOp.lean#L15-L15","name":"Iris.Std.LawfulBigOp.mk","line":15,"kind":"ctor","docLink":"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp.mk\"><span class=\"name\">Iris</span>.<span class=\"name\">Std</span>.<span class=\"name\">LawfulBigOp</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">unit</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">PROP</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">eq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <a href=\"./foundational_types.html\">Prop</a>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">refl</span> : <span class=\"fn\">∀ {<span class=\"fn\">a</span> : <span class=\"fn\">PROP</span>}, <span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">a</span> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">symm</span> : <span class=\"fn\">∀ {<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">PROP</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">b</span> <span class=\"fn\">a</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trans</span> : <span class=\"fn\">∀ {<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <span class=\"fn\">PROP</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span> → <span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">comm</span> : <span class=\"fn\">∀ {<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">PROP</span>}, <span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">b</span> <span class=\"fn\">a</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">assoc</span> : <span class=\"fn\">∀ {<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <span class=\"fn\">PROP</span>}, <span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">c</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span>)</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">left_id</span> : <span class=\"fn\">∀ {<span class=\"fn\">a</span> : <span class=\"fn\">PROP</span>}, <span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">unit</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">congr_l</span> : <span class=\"fn\">∀ {<span class=\"fn\">a </span><span class=\"fn\">a' </span><span class=\"fn\">b</span> : <span class=\"fn\">PROP</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">a</span> <span class=\"fn\">a'</span></span> → <span class=\"fn\"><span class=\"fn\">eq</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">a'</span> <span class=\"fn\">b</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp\">LawfulBigOp</a> <span class=\"fn\">f</span> <span class=\"fn\">unit</span> <span class=\"fn\">eq</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/Std/BigOp.lean#L15-L23","name":"Iris.Std.LawfulBigOp","line":15,"kind":"class","docLink":"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/Std/BigOp.html#Iris.Std.LawfulBigOp\"><span class=\"name\">Iris</span>.<span class=\"name\">Std</span>.<span class=\"name\">LawfulBigOp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">unit</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">PROP</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">eq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <a href=\"./foundational_types.html\">Prop</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/Std/BigOp.lean#L9-L13","name":"Iris.Std.bigOp","line":9,"kind":"def","docLink":"./Iris/Std/BigOp.html#Iris.Std.bigOp","doc":"Fold a binary operator `f` over a list of `PROP`s. If the list is empty, `unit` is returned. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/Std/BigOp.html#Iris.Std.bigOp\"><span class=\"name\">Iris</span>.<span class=\"name\">Std</span>.<span class=\"name\">bigOp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span> → <span class=\"fn\">PROP</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">unit</span> : <span class=\"fn\">PROP</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">PROP</span></span> → <span class=\"fn\">PROP</span></span></div></div>"}]}