{"name":"Lean.Meta.Tactic.FunIndCollect","instances":[{"typeNames":["Lean.Meta.FunInd.Call"],"name":"Lean.Meta.FunInd.instHashableCall","className":"Hashable"},{"typeNames":["Lean.Meta.FunInd.Call"],"name":"Lean.Meta.FunInd.instBEqCall","className":"BEq"},{"typeNames":["Lean.Meta.FunInd.SeenCalls"],"name":"Lean.Meta.FunInd.instEmptyCollectionSeenCalls","className":"EmptyCollection"}],"imports":["Lean.Meta.Tactic.Util","Lean.Meta.Tactic.FunIndInfo"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/FunIndCollect.lean#L112-L113","name":"Lean.Meta.FunInd.collect","line":112,"kind":"def","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.collect","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.collect\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">collect</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">needle</span> : <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/FunIndCollect.lean#L101-L108","name":"Lean.Meta.FunInd.Collector.main.go","line":101,"kind":"def","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.main.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.main.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">Collector</span>.<span class=\"name\">main</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/StateRef.html#StateRefT'\">StateRefT'</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a> <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.Cache\">Cache</a> <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/FunIndCollect.lean#L97-L108","name":"Lean.Meta.FunInd.Collector.main","line":97,"kind":"def","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.main","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.main\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">Collector</span>.<span class=\"name\">main</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">needle</span> : <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/FunIndCollect.lean#L77-L95","name":"Lean.Meta.FunInd.Collector.visit","line":77,"kind":"def","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.visit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.visit\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">Collector</span>.<span class=\"name\">visit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/StateRef.html#StateRefT'\">StateRefT'</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a> <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.Cache\">Cache</a> <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/FunIndCollect.lean#L75-L75","name":"Lean.Meta.FunInd.Collector.Cache","line":75,"kind":"def","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.Cache","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.Cache\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">Collector</span>.<span class=\"name\">Cache</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/FunIndCollect.lean#L72-L73","name":"Lean.Meta.FunInd.Collector.visitApp","line":72,"kind":"def","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.visitApp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.visitApp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">Collector</span>.<span class=\"name\">visitApp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funIndInfo</span> : <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/FunIndCollect.lean#L69-L70","name":"Lean.Meta.FunInd.Collector.saveFunInd","line":69,"kind":"def","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.saveFunInd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.saveFunInd\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">Collector</span>.<span class=\"name\">saveFunInd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funIndInfo</span> : <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/FunIndCollect.lean#L67-L67","name":"Lean.Meta.FunInd.Collector.M","line":67,"kind":"def","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.M","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Collector.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">Collector</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/FunIndCollect.lean#L50-L63","name":"Lean.Meta.FunInd.SeenCalls.uniques","line":50,"kind":"def","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls.uniques","doc":"Which functions have exactly one candidate application. Used by `try?` to determine whether\nwe can use `fun_induction foo` or need `fun_induction foo x y z`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls.uniques\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">SeenCalls</span>.<span class=\"name\">uniques</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">calls</span> : <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls\">SeenCalls</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/FunIndCollect.lean#L37-L48","name":"Lean.Meta.FunInd.SeenCalls.push","line":37,"kind":"def","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls.push","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls.push\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">SeenCalls</span>.<span class=\"name\">push</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funIndInfo</span> : <a href=\"./Lean/Meta/Tactic/FunIndInfo.html#Lean.Meta.FunIndInfo\">FunIndInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">calls</span> : <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls\">SeenCalls</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls\">SeenCalls</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/FunIndCollect.lean#L34-L35","name":"Lean.Meta.FunInd.SeenCalls.isEmpty","line":34,"kind":"def","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls.isEmpty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls.isEmpty\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">SeenCalls</span>.<span class=\"name\">isEmpty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sc</span> : <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls\">SeenCalls</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/FunIndCollect.lean#L31-L32","name":"Lean.Meta.FunInd.instEmptyCollectionSeenCalls","line":31,"kind":"instance","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.instEmptyCollectionSeenCalls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.instEmptyCollectionSeenCalls\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">instEmptyCollectionSeenCalls</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls\">SeenCalls</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/FunIndCollect.lean#L29-L29","name":"Lean.Meta.FunInd.SeenCalls.seen","line":29,"kind":"def","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls.seen","doc":"only function name and relevant arguments "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls.seen\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">SeenCalls</span>.<span class=\"name\">seen</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls\">SeenCalls</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/FunIndCollect.lean#L27-L27","name":"Lean.Meta.FunInd.SeenCalls.calls","line":27,"kind":"def","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls.calls","doc":"the full calls "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls.calls\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">SeenCalls</span>.<span class=\"name\">calls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls\">SeenCalls</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/FunIndCollect.lean#L25-L25","name":"Lean.Meta.FunInd.SeenCalls.mk","line":25,"kind":"ctor","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">SeenCalls</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">calls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">seen</span> : <span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls\">SeenCalls</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/FunIndCollect.lean#L25-L29","name":"Lean.Meta.FunInd.SeenCalls","line":25,"kind":"structure","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.SeenCalls\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">SeenCalls</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/FunIndCollect.lean#L23-L23","name":"Lean.Meta.FunInd.instBEqCall","line":23,"kind":"instance","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.instBEqCall","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.instBEqCall\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">instBEqCall</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call\">Call</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/FunIndCollect.lean#L23-L23","name":"Lean.Meta.FunInd.instHashableCall","line":23,"kind":"instance","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.instHashableCall","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.instHashableCall\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">instHashableCall</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call\">Call</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/FunIndCollect.lean#L22-L22","name":"Lean.Meta.FunInd.Call.relevantArgs","line":22,"kind":"def","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call.relevantArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call.relevantArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">Call</span>.<span class=\"name\">relevantArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call\">Call</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/FunIndCollect.lean#L20-L20","name":"Lean.Meta.FunInd.Call.expr","line":20,"kind":"def","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call.expr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call.expr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">Call</span>.<span class=\"name\">expr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call\">Call</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/FunIndCollect.lean#L18-L18","name":"Lean.Meta.FunInd.Call.mk","line":18,"kind":"ctor","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">Call</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr </span><span class=\"fn\">relevantArgs</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call\">Call</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Meta/Tactic/FunIndCollect.lean#L18-L23","name":"Lean.Meta.FunInd.Call","line":18,"kind":"structure","docLink":"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/FunIndCollect.html#Lean.Meta.FunInd.Call\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunInd</span>.<span class=\"name\">Call</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}