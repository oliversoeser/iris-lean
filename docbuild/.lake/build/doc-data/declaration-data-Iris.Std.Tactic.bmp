{"name":"Iris.Std.Tactic","instances":[],"imports":["Init","Lean.Elab.Tactic","Lean.Meta.Tactic.Util"],"declarations":[{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/Std/Tactic.lean#L29-L36","name":"Iris.Std.withFocus","line":29,"kind":"def","docLink":"./Iris/Std/Tactic.html#Iris.Std.withFocus","doc":"Execute the function `f` with the single goal `goal` and restore all current goals after\nthe execution. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/Std/Tactic.html#Iris.Std.withFocus\"><span class=\"name\">Iris</span>.<span class=\"name\">Std</span>.<span class=\"name\">withFocus</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">Lean.Elab.Tactic.TacticM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">Lean.Elab.Tactic.TacticM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/Std/Tactic.lean#L25-L27","name":"Iris.Std.findGoalFromTag?","line":25,"kind":"def","docLink":"./Iris/Std/Tactic.html#Iris.Std.findGoalFromTag?","doc":"Find the goal with the tag `tag`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/Std/Tactic.html#Iris.Std.findGoalFromTag?\"><span class=\"name\">Iris</span>.<span class=\"name\">Std</span>.<span class=\"name\">findGoalFromTag?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tag</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">Lean.Elab.Tactic.TacticM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/Std/Tactic.lean#L12-L23","name":"Iris.Std.apply'","line":12,"kind":"def","docLink":"./Iris/Std/Tactic.html#Iris.Std.apply'","doc":"Apply the theorem with the name `name` to the goal `goal`. The flag `recover` is set to `false`\nand the transparency mode is set to `reducible`. Only non-dependent arguments of the applied\ntheorem are turned into goals. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/Std/Tactic.html#Iris.Std.apply'\"><span class=\"name\">Iris</span>.<span class=\"name\">Std</span>.<span class=\"name\">apply'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">Lean.Elab.Tactic.TacticM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span>)</span></span></div></div>"}]}