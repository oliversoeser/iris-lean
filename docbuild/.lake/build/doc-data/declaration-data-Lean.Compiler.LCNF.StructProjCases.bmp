{"name":"Lean.Compiler.LCNF.StructProjCases","instances":[],"imports":["Lean.Compiler.LCNF.Basic","Lean.Compiler.LCNF.InferType","Lean.Compiler.LCNF.MonoTypes","Lean.Compiler.LCNF.PassManager","Lean.Compiler.LCNF.PrettyPrinter"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/StructProjCases.lean#L128-L129","name":"Lean.Compiler.LCNF.structProjCases","line":128,"kind":"def","docLink":"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.structProjCases","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.structProjCases\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">structProjCases</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/PassManager.html#Lean.Compiler.LCNF.Pass\">Pass</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/StructProjCases.lean#L122-L124","name":"Lean.Compiler.LCNF.StructProjCases.visitDecl","line":122,"kind":"def","docLink":"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.visitDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.visitDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">StructProjCases</span>.<span class=\"name\">visitDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.M\">M</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Decl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/StructProjCases.lean#L115-L118","name":"Lean.Compiler.LCNF.StructProjCases.visitArg","line":115,"kind":"def","docLink":"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.visitArg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.visitArg\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">StructProjCases</span>.<span class=\"name\">visitArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arg</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg\">Arg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.M\">M</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg\">Arg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/StructProjCases.lean#L112-L113","name":"Lean.Compiler.LCNF.StructProjCases.visitAlt","line":112,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.visitAlt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.visitAlt\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">StructProjCases</span>.<span class=\"name\">visitAlt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">alt</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Alt\">Alt</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.M\">M</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Alt\">Alt</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/StructProjCases.lean#L102-L110","name":"Lean.Compiler.LCNF.StructProjCases.visitLetValue","line":102,"kind":"def","docLink":"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.visitLetValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.visitLetValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">StructProjCases</span>.<span class=\"name\">visitLetValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetValue\">LetValue</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.M\">M</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetValue\">LetValue</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/StructProjCases.lean#L48-L100","name":"Lean.Compiler.LCNF.StructProjCases.visitCode","line":48,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.visitCode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.visitCode\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">StructProjCases</span>.<span class=\"name\">visitCode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">code</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.M\">M</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/StructProjCases.lean#L43-L44","name":"Lean.Compiler.LCNF.StructProjCases.remapFVar","line":43,"kind":"def","docLink":"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.remapFVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.remapFVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">StructProjCases</span>.<span class=\"name\">remapFVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.M\">M</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/StructProjCases.lean#L40-L41","name":"Lean.Compiler.LCNF.StructProjCases.M.run","line":40,"kind":"def","docLink":"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.M.run","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.M.run\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">StructProjCases</span>.<span class=\"name\">M</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.M\">M</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/StructProjCases.lean#L38-L38","name":"Lean.Compiler.LCNF.StructProjCases.M","line":38,"kind":"def","docLink":"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.M","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">StructProjCases</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/StructProjCases.lean#L36-L36","name":"Lean.Compiler.LCNF.StructProjCases.State.fvarMap","line":36,"kind":"def","docLink":"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.State.fvarMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.State.fvarMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">StructProjCases</span>.<span class=\"name\">State</span>.<span class=\"name\">fvarMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/StructProjCases.lean#L35-L35","name":"Lean.Compiler.LCNF.StructProjCases.State.projMap","line":35,"kind":"def","docLink":"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.State.projMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.State.projMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">StructProjCases</span>.<span class=\"name\">State</span>.<span class=\"name\">projMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/StructProjCases.lean#L34-L34","name":"Lean.Compiler.LCNF.StructProjCases.State.mk","line":34,"kind":"ctor","docLink":"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">StructProjCases</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">projMap</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarMap</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.State\">State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/StructProjCases.lean#L34-L36","name":"Lean.Compiler.LCNF.StructProjCases.State","line":34,"kind":"structure","docLink":"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">StructProjCases</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/StructProjCases.lean#L23-L31","name":"Lean.Compiler.LCNF.StructProjCases.mkFieldParamsForCtorType.loop","line":23,"kind":"def","docLink":"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.mkFieldParamsForCtorType.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.mkFieldParamsForCtorType.loop\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">StructProjCases</span>.<span class=\"name\">mkFieldParamsForCtorType</span>.<span class=\"name\">loop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">params</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param\">Param</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">numParams</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param\">Param</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/StructProjCases.lean#L22-L32","name":"Lean.Compiler.LCNF.StructProjCases.mkFieldParamsForCtorType","line":22,"kind":"def","docLink":"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.mkFieldParamsForCtorType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.mkFieldParamsForCtorType\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">StructProjCases</span>.<span class=\"name\">mkFieldParamsForCtorType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">numParams</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">CompilerM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param\">Param</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6741444a63eec253a7eae7a83f1beb3de015023d/src/Lean/Compiler/LCNF/StructProjCases.lean#L16-L20","name":"Lean.Compiler.LCNF.StructProjCases.findStructCtorInfo?","line":16,"kind":"def","docLink":"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.findStructCtorInfo?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/StructProjCases.html#Lean.Compiler.LCNF.StructProjCases.findStructCtorInfo?\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">StructProjCases</span>.<span class=\"name\">findStructCtorInfo?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">typeName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Declaration.html#Lean.ConstructorVal\">ConstructorVal</a>)</span></span></div></div>"}]}