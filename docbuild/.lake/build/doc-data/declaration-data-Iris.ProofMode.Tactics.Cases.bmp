{"name":"Iris.ProofMode.Tactics.Cases","instances":[],"imports":["Init","Iris.ProofMode.Instances","Iris.ProofMode.Patterns.CasesPattern","Iris.ProofMode.Tactics.Clear","Iris.ProofMode.Tactics.Move","Iris.ProofMode.Tactics.Pure"],"declarations":[{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L277-L296","name":"Iris.ProofMode.tacticIcases__With__","line":277,"kind":"def","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.tacticIcases__With__","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.tacticIcases__With__\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">tacticIcases__With__</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L204-L275","name":"Iris.ProofMode.iCasesCore","line":204,"kind":"opaque","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.iCasesCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.iCasesCore\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">iCasesCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">prop</span> : <span class=\"fn\">Q(<a href=\"./foundational_types.html\">Type</a> u)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bi</span> : <span class=\"fn\">Q(<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">«$prop»</span></span>)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\">Q(<span class=\"fn\">«$prop»</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hyps</span> : <span class=\"fn\"><a href=\"./Iris/ProofMode/Expr.html#Iris.ProofMode.Hyps\">Hyps</a> <span class=\"fn\">bi</span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Q</span> : <span class=\"fn\">Q(<span class=\"fn\">«$prop»</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">Q(<a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">A'</span> : <span class=\"fn\">Q(<span class=\"fn\">«$prop»</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">«$A»</span> =Q <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">iprop(</a><a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">□?</a><span class=\"fn\">«$p»</span> <span class=\"fn\">«$A'»</span><a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">)</a></span> →\n  <span class=\"fn\">(<span class=\"fn\">pat</span> : <a href=\"./Iris/ProofMode/Patterns/CasesPattern.html#Iris.ProofMode.iCasesPat\">iCasesPat</a>) → <span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\">Q(<span class=\"fn\">«$prop»</span>)</span>} → <span class=\"fn\"><span class=\"fn\"><a href=\"./Iris/ProofMode/Expr.html#Iris.ProofMode.Hyps\">Hyps</a> <span class=\"fn\">bi</span> <span class=\"fn\">P</span></span> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">Q(<span class=\"fn\">«$P»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">«$Q»</span>)</span></span></span></span>) → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">Q(<span class=\"fn\">«$P»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <span class=\"fn\">«$A»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">«$Q»</span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L201-L201","name":"Iris.ProofMode.of_emp_sep","line":201,"kind":"theorem","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.of_emp_sep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.of_emp_sep\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">of_emp_sep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">PROP</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">Q</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">A</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">emp <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <span class=\"fn\">A</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L189-L199","name":"Iris.ProofMode.iCasesSpatial","line":189,"kind":"def","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.iCasesSpatial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.iCasesSpatial\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">iCasesSpatial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">prop</span> : <span class=\"fn\">Q(<a href=\"./foundational_types.html\">Type</a> u)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">_bi</span> : <span class=\"fn\">Q(<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">«$prop»</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P </span><span class=\"fn\">Q </span><span class=\"fn\">A'</span> : <span class=\"fn\">Q(<span class=\"fn\">«$prop»</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">Q(<a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">(<span class=\"fn\">B'</span> : <span class=\"fn\">Q(<span class=\"fn\">«$prop»</span>)</span>) → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">Q(<span class=\"fn\">«$P»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <span class=\"fn\">«$B'»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">«$Q»</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">Q(<span class=\"fn\">«$P»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">□?</a><span class=\"fn\">«$p»</span> <span class=\"fn\">«$A'»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">«$Q»</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L186-L187","name":"Iris.ProofMode.spatial_elim_intuitionistic","line":186,"kind":"theorem","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.spatial_elim_intuitionistic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.spatial_elim_intuitionistic\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">spatial_elim_intuitionistic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">PROP</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">A' </span><span class=\"fn\">Q</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/ProofMode/Classes.html#Iris.ProofMode.FromAffinely\">FromAffinely</a> <span class=\"fn\">A'</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <span class=\"fn\">A'</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionistically\">□</a> <span class=\"fn\">A</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L183-L184","name":"Iris.ProofMode.spatial_elim_spatial","line":183,"kind":"theorem","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.spatial_elim_spatial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.spatial_elim_spatial\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">spatial_elim_spatial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">PROP</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">A' </span><span class=\"fn\">Q</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/ProofMode/Classes.html#Iris.ProofMode.FromAffinely\">FromAffinely</a> <span class=\"fn\">A'</span> <span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <span class=\"fn\">A'</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <span class=\"fn\">A</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L170-L181","name":"Iris.ProofMode.iCasesIntuitionistic","line":170,"kind":"def","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.iCasesIntuitionistic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.iCasesIntuitionistic\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">iCasesIntuitionistic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">prop</span> : <span class=\"fn\">Q(<a href=\"./foundational_types.html\">Type</a> u)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">_bi</span> : <span class=\"fn\">Q(<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">«$prop»</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P </span><span class=\"fn\">Q </span><span class=\"fn\">A'</span> : <span class=\"fn\">Q(<span class=\"fn\">«$prop»</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">Q(<a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">(<span class=\"fn\">B'</span> : <span class=\"fn\">Q(<span class=\"fn\">«$prop»</span>)</span>) → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">Q(<span class=\"fn\">«$P»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionistically\">□</a> <span class=\"fn\">«$B'»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">«$Q»</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">Q(<span class=\"fn\">«$P»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">□?</a><span class=\"fn\">«$p»</span> <span class=\"fn\">«$A'»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">«$Q»</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L167-L168","name":"Iris.ProofMode.intuitionistic_elim_intuitionistic","line":167,"kind":"theorem","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.intuitionistic_elim_intuitionistic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.intuitionistic_elim_intuitionistic\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">intuitionistic_elim_intuitionistic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">PROP</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">A' </span><span class=\"fn\">Q</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/ProofMode/Classes.html#Iris.ProofMode.IntoPersistently\">IntoPersistently</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> <span class=\"fn\">A</span> <span class=\"fn\">A'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionistically\">□</a> <span class=\"fn\">A'</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionistically\">□</a> <span class=\"fn\">A</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L163-L165","name":"Iris.ProofMode.intuitionistic_elim_spatial","line":163,"kind":"theorem","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.intuitionistic_elim_spatial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.intuitionistic_elim_spatial\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">intuitionistic_elim_spatial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">PROP</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">A' </span><span class=\"fn\">Q</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/ProofMode/Classes.html#Iris.ProofMode.IntoPersistently\">IntoPersistently</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a> <span class=\"fn\">A</span> <span class=\"fn\">A'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/Std/TC.html#Iris.Std.TCOr\">Std.TCOr</a> <span class=\"fn\">(<a href=\"./Iris/BI/Classes.html#Iris.BI.Affine\">BI.Affine</a> <span class=\"fn\">A</span>)</span> <span class=\"fn\">(<a href=\"./Iris/BI/Classes.html#Iris.BI.Absorbing\">BI.Absorbing</a> <span class=\"fn\">Q</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionistically\">□</a> <span class=\"fn\">A'</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <span class=\"fn\">A</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L146-L161","name":"Iris.ProofMode.iCasesOr","line":146,"kind":"def","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.iCasesOr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.iCasesOr\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">iCasesOr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">prop</span> : <span class=\"fn\">Q(<a href=\"./foundational_types.html\">Type</a> u)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">_bi</span> : <span class=\"fn\">Q(<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">«$prop»</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P </span><span class=\"fn\">Q </span><span class=\"fn\">A'</span> : <span class=\"fn\">Q(<span class=\"fn\">«$prop»</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">Q(<a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k1 </span><span class=\"fn\">k2</span> : <span class=\"fn\">(<span class=\"fn\">B </span><span class=\"fn\">B'</span> : <span class=\"fn\">Q(<span class=\"fn\">«$prop»</span>)</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">«$B»</span> =Q <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">iprop(</a><a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">□?</a><span class=\"fn\">«$p»</span> <span class=\"fn\">«$B'»</span><a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">)</a></span> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">Q(<span class=\"fn\">«$P»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <span class=\"fn\">«$B»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">«$Q»</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">Q(<span class=\"fn\">«$P»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">□?</a><span class=\"fn\">«$p»</span> <span class=\"fn\">«$A'»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">«$Q»</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L143-L144","name":"Iris.ProofMode.or_elim_intuitionistic","line":143,"kind":"theorem","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.or_elim_intuitionistic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.or_elim_intuitionistic\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">or_elim_intuitionistic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">PROP</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">A </span><span class=\"fn\">Q </span><span class=\"fn\">A1 </span><span class=\"fn\">A2</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/ProofMode/Classes.html#Iris.ProofMode.IntoOr\">IntoOr</a> <span class=\"fn\">A</span> <span class=\"fn\">A1</span> <span class=\"fn\">A2</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1</span> : <span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionistically\">□</a> <span class=\"fn\">A1</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionistically\">□</a> <span class=\"fn\">A2</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionistically\">□</a> <span class=\"fn\">A</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L139-L141","name":"Iris.ProofMode.or_elim_spatial","line":139,"kind":"theorem","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.or_elim_spatial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.or_elim_spatial\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">or_elim_spatial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">PROP</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">A </span><span class=\"fn\">Q </span><span class=\"fn\">A1 </span><span class=\"fn\">A2</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Iris/ProofMode/Classes.html#Iris.ProofMode.IntoOr\">IntoOr</a> <span class=\"fn\">A</span> <span class=\"fn\">A1</span> <span class=\"fn\">A2</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1</span> : <span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <span class=\"fn\">A1</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <span class=\"fn\">A2</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <span class=\"fn\">A</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L115-L137","name":"Iris.ProofMode.iCasesSep","line":115,"kind":"def","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.iCasesSep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.iCasesSep\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">iCasesSep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">prop</span> : <span class=\"fn\">Q(<a href=\"./foundational_types.html\">Type</a> u)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bi</span> : <span class=\"fn\">Q(<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">«$prop»</span></span>)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\">Q(<span class=\"fn\">«$prop»</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hyps</span> : <span class=\"fn\"><a href=\"./Iris/ProofMode/Expr.html#Iris.ProofMode.Hyps\">Hyps</a> <span class=\"fn\">bi</span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Q </span><span class=\"fn\">A' </span><span class=\"fn\">A1 </span><span class=\"fn\">A2</span> : <span class=\"fn\">Q(<span class=\"fn\">«$prop»</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">Q(<a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">Q(<span class=\"fn\"><a href=\"./Iris/ProofMode/Classes.html#Iris.ProofMode.IntoAnd\">IntoAnd</a> <span class=\"fn\">«$p»</span> <span class=\"fn\">«$A'»</span> <span class=\"fn\">«$A1»</span> <span class=\"fn\">«$A2»</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\">Q(<span class=\"fn\">«$prop»</span>)</span>} → <span class=\"fn\"><span class=\"fn\"><a href=\"./Iris/ProofMode/Expr.html#Iris.ProofMode.Hyps\">Hyps</a> <span class=\"fn\">bi</span> <span class=\"fn\">P</span></span> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">Q(<span class=\"fn\">«$P»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">«$Q»</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k1 </span><span class=\"fn\">k2</span> :\n  <span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\">Q(<span class=\"fn\">«$prop»</span>)</span>} →\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Iris/ProofMode/Expr.html#Iris.ProofMode.Hyps\">Hyps</a> <span class=\"fn\">bi</span> <span class=\"fn\">P</span></span> →\n      <span class=\"fn\">(<span class=\"fn\">Q </span><span class=\"fn\">B </span><span class=\"fn\">B'</span> : <span class=\"fn\">Q(<span class=\"fn\">«$prop»</span>)</span>) →\n        <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">«$B»</span> =Q <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">iprop(</a><a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">□?</a><span class=\"fn\">«$p»</span> <span class=\"fn\">«$B'»</span><a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">)</a></span> →\n          <span class=\"fn\"><span class=\"fn\">({<span class=\"fn\">P</span> : <span class=\"fn\">Q(<span class=\"fn\">«$prop»</span>)</span>} → <span class=\"fn\"><span class=\"fn\"><a href=\"./Iris/ProofMode/Expr.html#Iris.ProofMode.Hyps\">Hyps</a> <span class=\"fn\">bi</span> <span class=\"fn\">P</span></span> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">Q(<span class=\"fn\">«$P»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">«$Q»</span>)</span></span></span>)</span> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">Q(<span class=\"fn\">«$P»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <span class=\"fn\">«$B»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">«$Q»</span>)</span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">Q(<span class=\"fn\">«$P»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">□?</a><span class=\"fn\">«$p»</span> <span class=\"fn\">«$A'»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">«$Q»</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L110-L113","name":"Iris.ProofMode.and_elim_intuitionistic","line":110,"kind":"theorem","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.and_elim_intuitionistic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.and_elim_intuitionistic\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">and_elim_intuitionistic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">PROP</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">A </span><span class=\"fn\">Q </span><span class=\"fn\">A1 </span><span class=\"fn\">A2</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Iris/ProofMode/Classes.html#Iris.ProofMode.IntoAnd\">IntoAnd</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> <span class=\"fn\">A</span> <span class=\"fn\">A1</span> <span class=\"fn\">A2</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionistically\">□</a> <span class=\"fn\">A1</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionistically\">□</a> <span class=\"fn\">A2</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.wand\">-∗</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionistically\">□</a> <span class=\"fn\">A</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L106-L108","name":"Iris.ProofMode.sep_elim_spatial","line":106,"kind":"theorem","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.sep_elim_spatial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.sep_elim_spatial\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">sep_elim_spatial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">PROP</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">A </span><span class=\"fn\">Q </span><span class=\"fn\">A1 </span><span class=\"fn\">A2</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Iris/ProofMode/Classes.html#Iris.ProofMode.IntoSep\">IntoSep</a> <span class=\"fn\">A</span> <span class=\"fn\">A1</span> <span class=\"fn\">A2</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <span class=\"fn\">A1</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">A2</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.wand\">-∗</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <span class=\"fn\">A</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L89-L104","name":"Iris.ProofMode.iCasesAndLR","line":89,"kind":"def","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.iCasesAndLR","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.iCasesAndLR\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">iCasesAndLR</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">prop</span> : <span class=\"fn\">Q(<a href=\"./foundational_types.html\">Type</a> u)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">_bi</span> : <span class=\"fn\">Q(<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">«$prop»</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P </span><span class=\"fn\">Q </span><span class=\"fn\">A' </span><span class=\"fn\">A1 </span><span class=\"fn\">A2</span> : <span class=\"fn\">Q(<span class=\"fn\">«$prop»</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">Q(<a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">_inst</span> : <span class=\"fn\">Q(<span class=\"fn\"><a href=\"./Iris/ProofMode/Classes.html#Iris.ProofMode.IntoAnd\">IntoAnd</a> <span class=\"fn\">«$p»</span> <span class=\"fn\">«$A'»</span> <span class=\"fn\">«$A1»</span> <span class=\"fn\">«$A2»</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">right</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">(<span class=\"fn\">B </span><span class=\"fn\">B'</span> : <span class=\"fn\">Q(<span class=\"fn\">«$prop»</span>)</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">«$B»</span> =Q <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">iprop(</a><a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">□?</a><span class=\"fn\">«$p»</span> <span class=\"fn\">«$B'»</span><a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">)</a></span> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">Q(<span class=\"fn\">«$P»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <span class=\"fn\">«$B»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">«$Q»</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">Q(<span class=\"fn\">«$P»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">□?</a><span class=\"fn\">«$p»</span> <span class=\"fn\">«$A'»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">«$Q»</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L86-L87","name":"Iris.ProofMode.and_elim_r_intuitionistic","line":86,"kind":"theorem","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.and_elim_r_intuitionistic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.and_elim_r_intuitionistic\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">and_elim_r_intuitionistic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">PROP</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">A </span><span class=\"fn\">Q </span><span class=\"fn\">A1 </span><span class=\"fn\">A2</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/ProofMode/Classes.html#Iris.ProofMode.IntoAnd\">IntoAnd</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> <span class=\"fn\">A</span> <span class=\"fn\">A1</span> <span class=\"fn\">A2</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionistically\">□</a> <span class=\"fn\">A2</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionistically\">□</a> <span class=\"fn\">A</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L83-L84","name":"Iris.ProofMode.and_elim_r_spatial","line":83,"kind":"theorem","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.and_elim_r_spatial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.and_elim_r_spatial\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">and_elim_r_spatial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">PROP</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">A </span><span class=\"fn\">Q </span><span class=\"fn\">A1 </span><span class=\"fn\">A2</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/ProofMode/Classes.html#Iris.ProofMode.IntoAnd\">IntoAnd</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a> <span class=\"fn\">A</span> <span class=\"fn\">A1</span> <span class=\"fn\">A2</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <span class=\"fn\">A2</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <span class=\"fn\">A</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L79-L81","name":"Iris.ProofMode.sep_and_elim_r","line":79,"kind":"theorem","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.sep_and_elim_r","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.sep_and_elim_r\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">sep_and_elim_r</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">PROP</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">A </span><span class=\"fn\">Q </span><span class=\"fn\">A1 </span><span class=\"fn\">A2</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Iris/ProofMode/Classes.html#Iris.ProofMode.IntoAnd\">IntoAnd</a> <span class=\"fn\">p</span> <span class=\"fn\">A</span> <span class=\"fn\">A1</span> <span class=\"fn\">A2</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">□?</a><span class=\"fn\">p</span> <span class=\"fn\">A2</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">□?</a><span class=\"fn\">p</span> <span class=\"fn\">A</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L76-L77","name":"Iris.ProofMode.and_elim_l_intuitionistic","line":76,"kind":"theorem","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.and_elim_l_intuitionistic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.and_elim_l_intuitionistic\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">and_elim_l_intuitionistic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">PROP</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">A </span><span class=\"fn\">Q </span><span class=\"fn\">A1 </span><span class=\"fn\">A2</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/ProofMode/Classes.html#Iris.ProofMode.IntoAnd\">IntoAnd</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> <span class=\"fn\">A</span> <span class=\"fn\">A1</span> <span class=\"fn\">A2</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionistically\">□</a> <span class=\"fn\">A1</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionistically\">□</a> <span class=\"fn\">A</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L73-L74","name":"Iris.ProofMode.and_elim_l_spatial","line":73,"kind":"theorem","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.and_elim_l_spatial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.and_elim_l_spatial\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">and_elim_l_spatial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">PROP</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">A </span><span class=\"fn\">Q </span><span class=\"fn\">A1 </span><span class=\"fn\">A2</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/ProofMode/Classes.html#Iris.ProofMode.IntoAnd\">IntoAnd</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a> <span class=\"fn\">A</span> <span class=\"fn\">A1</span> <span class=\"fn\">A2</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <span class=\"fn\">A1</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <span class=\"fn\">A</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L69-L71","name":"Iris.ProofMode.sep_and_elim_l","line":69,"kind":"theorem","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.sep_and_elim_l","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.sep_and_elim_l\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">sep_and_elim_l</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">PROP</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">A </span><span class=\"fn\">Q </span><span class=\"fn\">A1 </span><span class=\"fn\">A2</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Iris/ProofMode/Classes.html#Iris.ProofMode.IntoAnd\">IntoAnd</a> <span class=\"fn\">p</span> <span class=\"fn\">A</span> <span class=\"fn\">A1</span> <span class=\"fn\">A2</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">□?</a><span class=\"fn\">p</span> <span class=\"fn\">A1</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">□?</a><span class=\"fn\">p</span> <span class=\"fn\">A</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L50-L67","name":"Iris.ProofMode.iCasesExists","line":50,"kind":"def","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.iCasesExists","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.iCasesExists\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">iCasesExists</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">prop</span> : <span class=\"fn\">Q(<a href=\"./foundational_types.html\">Type</a> u)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">_bi</span> : <span class=\"fn\">Q(<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">«$prop»</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P </span><span class=\"fn\">Q </span><span class=\"fn\">A'</span> : <span class=\"fn\">Q(<span class=\"fn\">«$prop»</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">Q(<a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lean.binderIdent</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\">Q(<a href=\"./foundational_types.html\">Sort</a> v)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Φ</span> : <span class=\"fn\">Q(<span class=\"fn\"><span class=\"fn\">«$α»</span> → <span class=\"fn\">«$prop»</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">_inst</span> : <span class=\"fn\">Q(<span class=\"fn\"><a href=\"./Iris/ProofMode/Classes.html#Iris.ProofMode.IntoExists\">IntoExists</a> <span class=\"fn\">«$A'»</span> <span class=\"fn\">«$Φ»</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">(<span class=\"fn\">B </span><span class=\"fn\">B'</span> : <span class=\"fn\">Q(<span class=\"fn\">«$prop»</span>)</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">«$B»</span> =Q <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">iprop(</a><a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">□?</a><span class=\"fn\">«$p»</span> <span class=\"fn\">«$B'»</span><a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">)</a></span> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">Q(<span class=\"fn\">«$P»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <span class=\"fn\">«$B»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">«$Q»</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">Q(<span class=\"fn\">«$P»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">□?</a><span class=\"fn\">«$p»</span> <span class=\"fn\">«$A'»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">«$Q»</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L47-L48","name":"Iris.ProofMode.exists_elim_intuitionistic","line":47,"kind":"theorem","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.exists_elim_intuitionistic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.exists_elim_intuitionistic\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">exists_elim_intuitionistic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Sort</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">PROP</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">A </span><span class=\"fn\">Q</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Φ</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">PROP</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/ProofMode/Classes.html#Iris.ProofMode.IntoExists\">IntoExists</a> <span class=\"fn\">A</span> <span class=\"fn\">Φ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionistically\">□</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionistically\"><span class=\"fn\">Φ</span> <span class=\"fn\">a</span></a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionistically\">□</a> <span class=\"fn\">A</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L43-L45","name":"Iris.ProofMode.exists_elim_spatial","line":43,"kind":"theorem","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.exists_elim_spatial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.exists_elim_spatial\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">exists_elim_spatial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Sort</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">PROP</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">A </span><span class=\"fn\">Q</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Φ</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">PROP</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Iris/ProofMode/Classes.html#Iris.ProofMode.IntoExists\">IntoExists</a> <span class=\"fn\">A</span> <span class=\"fn\">Φ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\"><span class=\"fn\">Φ</span> <span class=\"fn\">a</span></a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <span class=\"fn\">A</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L25-L40","name":"Iris.ProofMode.iCasesEmptyConj","line":25,"kind":"def","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.iCasesEmptyConj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.iCasesEmptyConj\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">iCasesEmptyConj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">prop</span> : <span class=\"fn\">Q(<a href=\"./foundational_types.html\">Type</a> u)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bi</span> : <span class=\"fn\">Q(<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">«$prop»</span></span>)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\">Q(<span class=\"fn\">«$prop»</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hyps</span> : <span class=\"fn\"><a href=\"./Iris/ProofMode/Expr.html#Iris.ProofMode.Hyps\">Hyps</a> <span class=\"fn\">bi</span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Q </span><span class=\"fn\">A'</span> : <span class=\"fn\">Q(<span class=\"fn\">«$prop»</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">Q(<a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\">Q(<span class=\"fn\">«$prop»</span>)</span>} → <span class=\"fn\"><span class=\"fn\"><a href=\"./Iris/ProofMode/Expr.html#Iris.ProofMode.Hyps\">Hyps</a> <span class=\"fn\">bi</span> <span class=\"fn\">P</span></span> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">Q(<span class=\"fn\">«$P»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">«$Q»</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">Q(<span class=\"fn\">«$P»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionisticallyIf\">□?</a><span class=\"fn\">«$p»</span> <span class=\"fn\">«$A'»</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">«$Q»</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L22-L23","name":"Iris.ProofMode.sep_emp_intro_intuitionistic","line":22,"kind":"theorem","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.sep_emp_intro_intuitionistic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.sep_emp_intro_intuitionistic\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">sep_emp_intro_intuitionistic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">PROP</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionistically\">□</a> emp <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L20-L20","name":"Iris.ProofMode.sep_emp_intro_spatial","line":20,"kind":"theorem","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.sep_emp_intro_spatial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.sep_emp_intro_spatial\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">sep_emp_intro_spatial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">PROP</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> emp <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L17-L18","name":"Iris.ProofMode.false_elim_intuitionistic","line":17,"kind":"theorem","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.false_elim_intuitionistic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.false_elim_intuitionistic\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">false_elim_intuitionistic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">PROP</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.intuitionistically\">□</a> False <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/oliversoeser/iris-lean/blob/3f0268312ffe0c22e6d65f5e0c4742d995eef6b9/src//Iris/ProofMode/Tactics/Cases.lean#L15-L15","name":"Iris.ProofMode.false_elim_spatial","line":15,"kind":"theorem","docLink":"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.false_elim_spatial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Iris/ProofMode/Tactics/Cases.html#Iris.ProofMode.false_elim_spatial\"><span class=\"name\">Iris</span>.<span class=\"name\">ProofMode</span>.<span class=\"name\">false_elim_spatial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">PROP</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Iris/BI/BI.html#Iris.BI\">BI</a> <span class=\"fn\">PROP</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\">PROP</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.sep\">∗</a> False <a href=\"./Iris/BI/BIBase.html#Iris.BI.BIBase.Entails\">⊢</a> <span class=\"fn\">Q</span></div></div>"}]}